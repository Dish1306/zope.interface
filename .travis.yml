language: python

env:
  global:
    TWINE_USERNAME: zope.wheelbuilder
    TWINE_PASSWORD:
      secure: "AyR5QxUuZKdmywiepdBG0r8hgFQfaEf2hTxOg/HiXisVNcs1sUPjephBP4MqQBbf1/qxLM95F6Mw3sKneO3gDDQSGCsmvY1MWlDc+6R5TgqVBuOoONji5zGQH7v9RR8IPOyple8BNlFePl1hQ8r0dOT1U6rDVh5FkNJgHYE9OJ4="

python:
  - 2.7
  - 3.5
  - 3.6
  - 3.7
  - 3.8
  - pypy
  - pypy3

jobs:
  include:

    # manylinux wheel builds
    - name: 64-bit manylinux wheels (all Pythons)
      services: docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
      install: docker pull $DOCKER_IMAGE
      script: bash .manylinux.sh

    - name: 32-bit manylinux wheels (all Pythons)
      services: docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_i686 PRE_CMD=linux32
      install: docker pull $DOCKER_IMAGE
      script: bash .manylinux.sh

    # It's important to use 'macpython' builds to get the least
    # restrictive wheel tag. It's also important to avoid
    # 'homebrew 3' because it floats instead of being a specific version.
    - name: Python 2.7 wheels for MacOS
      os: osx
      language: generic
      # We require at least 2.7.15 to upload wheels.
      # See https://github.com/zopefoundation/BTrees/issues/113
      env: TERRYFY_PYTHON='macpython 2.7.17'
    - name: Python 3.5 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.5'
    - name: Python 3.6 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.6.0'
    - name: Python 3.7 wheels for MacOS
      os: osx
      language: generic
      env: TERRYFY_PYTHON='macpython 3.7.0'

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      git clone https://github.com/MacPython/terryfy
      source terryfy/travis_tools.sh
      get_python_environment $TERRYFY_PYTHON venv
    fi

install:
  - pip install -U pip setuptools
  - pip install -U coveralls coverage
  - pip install -U -e ".[test]"

script:
  - python --version
  - coverage run setup.py -q test
  - python setup.py bdist_wheel

after_success:
  - coveralls
  - |
    if [[ $TRAVIS_TAG && "$TRAVIS_OS_NAME" == "osx" ]]; then
      # macpython 3.5 doesn't support recent TLS protocols which causes twine
      # upload to fail, so we use the system Python to run twine
      /usr/bin/python -m pip install twine
      twine upload --skip-existing dist/*
    fi
  - |
    if [[ $TRAVIS_TAG && -n "$DOCKER_IMAGE" ]]; then
      pip install twine
      twine upload --skip-existing wheelhouse/*
    fi

notifications:
  email: false

cache: pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
